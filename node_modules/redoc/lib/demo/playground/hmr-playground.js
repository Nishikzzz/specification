"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_dom_1 = require("react-dom");
var react_hot_loader_1 = require("react-hot-loader");
// import DevTools from 'mobx-react-devtools';
var Redoc_1 = require("../../src/components/Redoc/Redoc");
var AppStore_1 = require("../../src/services/AppStore");
var loadAndBundleSpec_1 = require("../../src/utils/loadAndBundleSpec");
var renderRoot = function (Component, props) {
    return react_dom_1.render(React.createElement("div", null,
        React.createElement(react_hot_loader_1.AppContainer, null,
            React.createElement(Component, __assign({}, props)))), document.getElementById('example'));
};
var big = window.location.search.indexOf('big') > -1;
var swagger = window.location.search.indexOf('swagger') > -1; // compatibility mode ?
var specUrl = swagger ? 'swagger.yaml' : big ? 'big-openapi.json' : 'openapi.yaml';
var store;
var options = { nativeScrollbars: false };
function init() {
    return __awaiter(this, void 0, void 0, function () {
        var spec;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, loadAndBundleSpec_1.loadAndBundleSpec(specUrl)];
                case 1:
                    spec = _a.sent();
                    store = new AppStore_1.AppStore(spec, specUrl, options);
                    renderRoot(Redoc_1.Redoc, { store: store });
                    return [2 /*return*/];
            }
        });
    });
}
init();
if (module.hot) {
    var reload = function (reloadStore) {
        if (reloadStore === void 0) { reloadStore = false; }
        return function () {
            if (reloadStore) {
                // create a new Store
                store.dispose();
                var state = store.toJS();
                store = AppStore_1.AppStore.fromJS(state);
            }
            renderRoot(Redoc_1.Redoc, { store: store });
        };
    };
    module.hot.accept(['../../src/components/Redoc/Redoc'], reload());
    module.hot.accept(['../../src/services/AppStore'], reload(true));
}
//# sourceMappingURL=hmr-playground.js.map