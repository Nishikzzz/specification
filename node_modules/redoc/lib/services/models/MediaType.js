"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sampler = require("openapi-sampler");
var Schema_1 = require("./Schema");
var utils_1 = require("../../utils");
var Example_1 = require("./Example");
var MediaTypeModel = /** @class */ (function () {
    /**
     * @param isRequestType needed to know if skipe RO/RW fields in objects
     */
    function MediaTypeModel(parser, name, isRequestType, info, options) {
        this.name = name;
        this.isRequestType = isRequestType;
        this.schema = info.schema && new Schema_1.SchemaModel(parser, info.schema, '', options);
        if (info.examples !== undefined) {
            this.examples = utils_1.mapValues(info.examples, function (example) { return new Example_1.ExampleModel(parser, example); });
        }
        else if (info.example !== undefined) {
            this.examples = {
                default: new Example_1.ExampleModel(parser, { value: info.example }),
            };
        }
        else if (utils_1.isJsonLike(name)) {
            this.generateExample(parser, info);
        }
    }
    MediaTypeModel.prototype.generateExample = function (parser, info) {
        if (this.schema && this.schema.oneOf) {
            this.examples = {};
            for (var _i = 0, _a = this.schema.oneOf; _i < _a.length; _i++) {
                var subSchema = _a[_i];
                this.examples[subSchema.title] = {
                    value: Sampler.sample(subSchema.rawSchema, { skipReadOnly: this.isRequestType, skipReadWrite: !this.isRequestType }, parser.spec),
                };
            }
        }
        else {
            this.examples = {
                default: new Example_1.ExampleModel(parser, {
                    value: Sampler.sample(info.schema, { skipReadOnly: this.isRequestType, skipReadWrite: !this.isRequestType }, parser.spec),
                }),
            };
        }
    };
    return MediaTypeModel;
}());
exports.MediaTypeModel = MediaTypeModel;
//# sourceMappingURL=MediaType.js.map