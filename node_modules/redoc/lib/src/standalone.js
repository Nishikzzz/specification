"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_dom_1 = require("react-dom");
var RedocStandalone_1 = require("./components/RedocStandalone");
var dom_1 = require("./utils/dom");
exports.version = __REDOC_VERSION__;
exports.revision = __REDOC_REVISION__;
function attributesMap(element) {
    var res = {};
    var elAttrs = element.attributes;
    // tslint:disable-next-line
    for (var i = 0; i < elAttrs.length; i++) {
        var attrib = elAttrs[i];
        res[attrib.name] = attrib.value;
    }
    return res;
}
function parseOptionsFromElement(element) {
    var attrMap = attributesMap(element);
    var res = {};
    for (var attrName in attrMap) {
        var optionName = attrName.replace(/-(.)/g, function (_, $1) { return $1.toUpperCase(); });
        res[optionName] = attrMap[attrName];
        // TODO: normalize options
    }
    return res;
}
function init(specOrSpecUrl, options, element) {
    if (options === void 0) { options = {}; }
    if (element === void 0) { element = dom_1.querySelector('redoc'); }
    if (element === null) {
        throw new Error('"element" argument is not provided and <redoc> tag is not found on the page');
    }
    var specUrl;
    var spec;
    if (typeof specOrSpecUrl === 'string') {
        specUrl = specOrSpecUrl;
    }
    else if (typeof specOrSpecUrl === 'object') {
        spec = specOrSpecUrl;
    }
    react_dom_1.render(React.createElement(RedocStandalone_1.RedocStandalone, {
        spec: spec,
        specUrl: specUrl,
        options: __assign({}, options, parseOptionsFromElement(element)),
    }, ['Loading...']), element);
}
exports.init = init;
/**
 * autoinit ReDoc if <redoc> tag is found on the page with "spec-url" attr
 */
function autoInit() {
    var element = dom_1.querySelector('redoc');
    if (!element) {
        return;
    }
    var specUrl = element.getAttribute('spec-url');
    if (specUrl) {
        init(specUrl, {}, element);
    }
}
autoInit();
//# sourceMappingURL=standalone.js.map