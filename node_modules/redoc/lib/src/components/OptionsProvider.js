"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var OptionsProvider = /** @class */ (function (_super) {
    __extends(OptionsProvider, _super);
    function OptionsProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OptionsProvider.prototype.getChildContext = function () {
        return {
            redocOptions: this.props.options,
        };
    };
    OptionsProvider.prototype.render = function () {
        return React.Children.only(this.props.children);
    };
    OptionsProvider.childContextTypes = {
        redocOptions: PropTypes.object.isRequired,
    };
    return OptionsProvider;
}(React.Component));
exports.OptionsProvider = OptionsProvider;
exports.optionsContextTypes = {
    redocOptions: PropTypes.object,
};
var ComponentWithOptions = /** @class */ (function (_super) {
    __extends(ComponentWithOptions, _super);
    function ComponentWithOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ComponentWithOptions.prototype, "options", {
        get: function () {
            return this.context.redocOptions || {};
        },
        enumerable: true,
        configurable: true
    });
    ComponentWithOptions.contextTypes = exports.optionsContextTypes;
    return ComponentWithOptions;
}(React.Component));
exports.ComponentWithOptions = ComponentWithOptions;
//# sourceMappingURL=OptionsProvider.js.map