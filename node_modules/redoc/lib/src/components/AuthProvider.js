"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
exports.authContextTypes = {
    renderOperationAuth: PropTypes.func,
    getSecurities: PropTypes.func,
};
var AuthProvider = /** @class */ (function (_super) {
    __extends(AuthProvider, _super);
    function AuthProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AuthProvider.prototype.getChildContext = function () {
        return {
            renderOperationAuth: this.props.renderOperationAuth,
            getSecurities: this.props.getSecurities,
        };
    };
    AuthProvider.prototype.render = function () {
        return React.Children.only(this.props.children);
    };
    AuthProvider.childContextTypes = exports.authContextTypes;
    return AuthProvider;
}(React.Component));
exports.AuthProvider = AuthProvider;
var ComponentWithAuth = /** @class */ (function (_super) {
    __extends(ComponentWithAuth, _super);
    function ComponentWithAuth() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ComponentWithAuth.prototype, "auth", {
        get: function () {
            return {
                renderOperationAuth: this.context.renderOperationAuth,
                getSecurities: this.context.getSecurities,
            };
        },
        enumerable: true,
        configurable: true
    });
    ComponentWithAuth.contextTypes = exports.authContextTypes;
    return ComponentWithAuth;
}(React.Component));
exports.ComponentWithAuth = ComponentWithAuth;
//# sourceMappingURL=AuthProvider.js.map