"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var mobx_react_1 = require("mobx-react");
var common_elements_1 = require("../../common-elements");
var ServerSwitcher_1 = require("./ServerSwitcher");
var styled_elements_1 = require("./styled.elements");
var AuthProvider_1 = require("../AuthProvider");
var Shaker_1 = require("../../common-elements/Shaker");
var forms_1 = require("../../common-elements/forms");
var TryWithControls = /** @class */ (function (_super) {
    __extends(TryWithControls, _super);
    function TryWithControls(props) {
        var _this = _super.call(this, props) || this;
        _this.submit = function () { return __awaiter(_this, void 0, void 0, function () {
            var _a, operation, formApi, state, response, e_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this.props, operation = _a.operation, formApi = _a.formApi;
                        state = formApi.getFormState();
                        if (Object.keys(state.errors).some(function (k) { return state.errors[k] !== undefined; })) {
                            this.setAllTouched();
                            this.setError('Some parameters are not provided or invalid', 2000);
                            return [2 /*return*/];
                        }
                        this.setLoading();
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, operation.execute(formApi.values, (this.auth.getSecurities && this.auth.getSecurities()) || {})];
                    case 2:
                        response = _b.sent();
                        this.setSuccess(response);
                        return [3 /*break*/, 4];
                    case 3:
                        e_1 = _b.sent();
                        this.setError(e_1.message);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        }); };
        _this.state = {
            loading: false,
            response: undefined,
            error: '',
            serverIdx: 0,
            shouldShake: false,
        };
        return _this;
    }
    TryWithControls.prototype.setAllTouched = function () {
        var touches = {};
        this.props.operation.parameters.forEach(function (param) {
            touches[param.name] = true;
        });
        touches['__body'] = true;
        this.props.formApi.setAllTouched(touches);
    };
    TryWithControls.prototype.shake = function () {
        var _this = this;
        this.setState({
            shouldShake: true,
        });
        setTimeout(function () {
            return _this.setState({
                shouldShake: false,
            });
        }, 800);
    };
    TryWithControls.prototype.setError = function (error, autoHide) {
        var _this = this;
        if (autoHide === void 0) { autoHide = false; }
        this.setState({
            error: error,
            loading: false,
            response: undefined,
        });
        this.shake();
        if (autoHide !== false) {
            setTimeout(function () {
                return _this.setState({
                    error: '',
                });
            }, autoHide);
        }
    };
    TryWithControls.prototype.setSuccess = function (response) {
        this.setState({
            loading: false,
            error: '',
            response: response,
        });
    };
    TryWithControls.prototype.setLoading = function () {
        this.setState({
            loading: true,
            error: '',
            response: undefined,
        });
    };
    TryWithControls.prototype.render = function () {
        var operation = this.props.operation;
        var _a = this.state, loading = _a.loading, response = _a.response, error = _a.error;
        var headersObj = (response && response.headers) || {};
        var headers = Object.keys(headersObj).map(function (k) { return ({ name: k, value: headersObj[k] }); });
        var payload = response && response.body ? JSON.stringify(response.body, null, 2) : '// Empty response';
        var resp;
        if (loading) {
            resp = React.createElement("div", null, " Loading... ");
        }
        else if (error) {
            resp = React.createElement(forms_1.FieldError, null,
                " ",
                error,
                " ");
        }
        else if (response) {
            resp = (React.createElement(React.Fragment, null,
                React.createElement("div", null,
                    response.status,
                    " ",
                    response.statusText,
                    ' '),
                headers.length &&
                    ((React.createElement(React.Fragment, null,
                        React.createElement("h3", null, " Response Headers: "),
                        React.createElement(styled_elements_1.ResponseHeaders, null, headers.map(function (header) { return (React.createElement("li", { key: header.name },
                            React.createElement("strong", null,
                                " ",
                                header.name,
                                " "),
                            ": ",
                            header.value)); })))) ||
                        null),
                React.createElement("h3", null, " Payload: "),
                React.createElement(styled_elements_1.Payload, { source: payload, lang: 'javascript' })));
        }
        else {
            resp = React.createElement("div", null,
                " ",
                '// Try me',
                " ");
        }
        return (React.createElement(Shaker_1.default, { shouldShake: this.state.shouldShake },
            React.createElement(styled_elements_1.ControlsHeading, null, " # Request "),
            React.createElement(styled_elements_1.ControlsSubHeading, null, " # URL "),
            React.createElement(ServerSwitcher_1.ServerSwitcher, { operation: operation }),
            operation.requestBody &&
                operation.requestBody.content && (React.createElement(React.Fragment, null,
                React.createElement(styled_elements_1.ControlsSubHeading, null, " # Request Payload "),
                React.createElement(common_elements_1.CodeFlaskEdit, { style: { display: 'block', width: '100%' }, field: '__body' }))),
            React.createElement("div", { style: { textAlign: 'right' } },
                React.createElement(styled_elements_1.SubmitButton, { onClick: this.submit }, loading ? 'Loading...' : 'Send Request')),
            React.createElement(styled_elements_1.ControlsHeading, null, " # Response From Server "),
            resp));
    };
    TryWithControls = __decorate([
        mobx_react_1.observer
    ], TryWithControls);
    return TryWithControls;
}(AuthProvider_1.ComponentWithAuth));
exports.TryWithControls = TryWithControls;
//# sourceMappingURL=TryWithControls.js.map