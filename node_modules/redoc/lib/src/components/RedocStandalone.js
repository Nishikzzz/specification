"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PropTypes = require("prop-types");
var React = require("react");
var RedocNormalizedOptions_1 = require("../services/RedocNormalizedOptions");
var ErrorBoundary_1 = require("./ErrorBoundary");
var Loading_1 = require("./Loading/Loading");
var Redoc_1 = require("./Redoc/Redoc");
var StoreProvider_1 = require("./StoreProvider");
var RedocStandalone = /** @class */ (function (_super) {
    __extends(RedocStandalone, _super);
    function RedocStandalone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RedocStandalone.prototype.render = function () {
        var _a = this.props, spec = _a.spec, specUrl = _a.specUrl, _b = _a.options, options = _b === void 0 ? {} : _b;
        var hideLoading = options.hideLoading !== undefined;
        var normalizedOpts = new RedocNormalizedOptions_1.RedocNormalizedOptions(options);
        return (React.createElement(ErrorBoundary_1.ErrorBoundary, null,
            React.createElement(StoreProvider_1.StoreProvider, { spec: spec, specUrl: specUrl, options: options }, function (_a) {
                var loading = _a.loading, store = _a.store;
                return !loading ? (React.createElement(Redoc_1.Redoc, { store: store })) : hideLoading ? null : (React.createElement(Loading_1.Loading, { color: normalizedOpts.theme.colors.main }));
            })));
    };
    RedocStandalone.propTypes = {
        spec: function (props, _, componentName) {
            if (!props.spec && !props.specUrl) {
                return new Error("One of props 'spec' or 'specUrl' was not specified in '" + componentName + "'.");
            }
            return null;
        },
        specUrl: function (props, _, componentName) {
            if (!props.spec && !props.specUrl) {
                return new Error("One of props 'spec' or 'specUrl' was not specified in '" + componentName + "'.");
            }
            return null;
        },
        options: PropTypes.object,
    };
    return RedocStandalone;
}(React.Component));
exports.RedocStandalone = RedocStandalone;
//# sourceMappingURL=RedocStandalone.js.map