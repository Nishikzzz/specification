"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Tooltip_1 = require("../common-elements/Tooltip");
var ClipboardService_1 = require("../services/ClipboardService");
var CopyButtonWrapper = /** @class */ (function (_super) {
    __extends(CopyButtonWrapper, _super);
    function CopyButtonWrapper(props) {
        var _this = _super.call(this, props) || this;
        _this.copy = function () {
            var content = typeof _this.props.data === 'string'
                ? _this.props.data
                : JSON.stringify(_this.props.data, null, 2);
            ClipboardService_1.ClipboardService.copyCustom(content);
            _this.showTooltip();
        };
        _this.renderCopyButton = function () {
            return (React.createElement("span", { onClick: _this.copy },
                React.createElement(Tooltip_1.Tooltip, { title: ClipboardService_1.ClipboardService.isSupported() ? 'Copied' : 'Not supported in your browser', open: _this.state.tooltipShown }, "Copy")));
        };
        _this.state = {
            tooltipShown: false,
        };
        return _this;
    }
    CopyButtonWrapper.prototype.render = function () {
        return this.props.children({ renderCopyButton: this.renderCopyButton });
    };
    CopyButtonWrapper.prototype.showTooltip = function () {
        var _this = this;
        this.setState({
            tooltipShown: true,
        });
        setTimeout(function () {
            _this.setState({
                tooltipShown: false,
            });
        }, 1500);
    };
    return CopyButtonWrapper;
}(React.PureComponent));
exports.CopyButtonWrapper = CopyButtonWrapper;
//# sourceMappingURL=CopyButtonWrapper.js.map