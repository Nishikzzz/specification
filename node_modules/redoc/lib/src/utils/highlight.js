"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Prism = require("prismjs");
require("prismjs/components/prism-actionscript.js");
require("prismjs/components/prism-bash.js");
require("prismjs/components/prism-c.js");
require("prismjs/components/prism-coffeescript.js");
require("prismjs/components/prism-cpp.js");
require("prismjs/components/prism-csharp.js");
require("prismjs/components/prism-go.js");
require("prismjs/components/prism-haskell.js");
require("prismjs/components/prism-java.js");
require("prismjs/components/prism-lua.js");
require("prismjs/components/prism-markup.js"); // xml
require("prismjs/components/prism-matlab.js");
require("prismjs/components/prism-objectivec.js");
require("prismjs/components/prism-perl.js");
require("prismjs/components/prism-php.js");
require("prismjs/components/prism-python.js");
require("prismjs/components/prism-r.js");
require("prismjs/components/prism-ruby.js");
require("prismjs/components/prism-scala.js");
require("prismjs/components/prism-swift.js");
var styled_components_1 = require("../styled-components");
var prism_dark_css_1 = require("prismjs/themes/prism-dark.css"); // dark theme
styled_components_1.injectGlobal(templateObject_1 || (templateObject_1 = __makeTemplateObject(["", ""], ["", ""])), prism_dark_css_1.default);
var DEFAULT_LANG = 'clike';
/**
 * map language names to Prism.js names
 */
function mapLang(lang) {
    return ({
        json: 'js',
        'c++': 'cpp',
        'c#': 'csharp',
        'objective-c': 'objectivec',
        shell: 'bash',
        viml: 'vim',
    }[lang] || DEFAULT_LANG);
}
exports.mapLang = mapLang;
/**
 * Highlight source code string using Prism.js
 * @param source source code to highlight
 * @param lang highlight language
 * @param limit? max number of lines
 * @return highlighted souce code as **html string**
 */
function highlight(source, lang, limit) {
    var grammar = Prism.languages[lang];
    if (!grammar) {
        grammar = Prism.languages[mapLang(lang)];
    }
    return Prism.highlight(limit && source.length > limit ? source.substring(0, limit) + '\n...' : source, grammar);
}
exports.highlight = highlight;
var templateObject_1;
//# sourceMappingURL=highlight.js.map