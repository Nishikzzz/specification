"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_components_1 = require("../../styled-components");
var DOMPurify = require("dompurify");
var services_1 = require("../../services");
var OptionsProvider_1 = require("../OptionsProvider");
var styles_1 = require("./styles");
var InternalMarkdown = /** @class */ (function (_super) {
    __extends(InternalMarkdown, _super);
    function InternalMarkdown(props) {
        var _this = _super.call(this, props) || this;
        if (props.components && props.inline) {
            throw new Error('Markdown Component: "inline" mode doesn\'t support "components"');
        }
        return _this;
    }
    InternalMarkdown.prototype.render = function () {
        var _a = this.props, source = _a.source, raw = _a.raw, className = _a.className, components = _a.components, inline = _a.inline, dense = _a.dense, store = _a.store;
        if (components && !store) {
            throw new Error('When using components with Markdwon in ReDoc, store prop must be provided');
        }
        var sanitize = this.props.sanitize || this.options.untrustedSpec
            ? function (html) { return DOMPurify.sanitize(html); }
            : function (html) { return html; };
        var renderer = new services_1.MarkdownRenderer();
        var parts = components
            ? renderer.renderMdWithComponents(source, components, raw)
            : [renderer.renderMd(source, raw)];
        if (!parts.length) {
            return null;
        }
        var appendClass = ' redoc-markdown';
        if (dense) {
            appendClass += ' -dense';
        }
        if (inline) {
            appendClass += ' -inline';
        }
        if (inline) {
            return (React.createElement("span", { className: className + appendClass, dangerouslySetInnerHTML: { __html: sanitize(parts[0]) } }));
        }
        return (React.createElement("div", { className: className + appendClass }, parts.map(function (part, idx) {
            return typeof part === 'string' ? (React.createElement("div", { key: idx, dangerouslySetInnerHTML: { __html: sanitize(part) } })) : (React.createElement(part.component, __assign({ key: idx }, __assign({}, part.attrs, part.propsSelector(store)))));
        })));
    };
    return InternalMarkdown;
}(OptionsProvider_1.ComponentWithOptions));
exports.Markdown = styled_components_1.default(InternalMarkdown)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", ";\n"], ["\n  ", ";\n"])), styles_1.markdownCss);
var templateObject_1;
//# sourceMappingURL=Markdown.js.map